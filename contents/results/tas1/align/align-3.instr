DEFINE INSTRUMENT TAS1_2axis(OMM_d,TTM_d,TT_d,C1,C2,C3,NCOUNT)

DECLARE
%{

/* Number of neutrons to send through. */
int ncount;

/* 30' mosaicity used on monochromator and analysator */
double tas1_mono_mosaic = 30*MIN2RAD;
/* Q vector for bragg scattering with monochromator and analysator */
double tas1_mono_q = 1.87325*AA2MS;
double tas1_mono_r0 = 0.6;

/* Collimators */
double coll1_div;
double coll2_div;
double coll3_div;

/* Angles in radians. */
double OMM_r, TTM_r, TT_r;

double mpos0, mpos1, mpos2, mpos3, mpos4, mpos5, mpos6, mpos7;
double mrot0, mrot1, mrot2, mrot3, mrot4, mrot5, mrot6, mrot7;


/* Global correction factor */
double MC_correction;

char *vmon1_file_name = "sim/align_3_1.vmon";
char *vmon2_file_name = "sim/align_3_2.vmon";

/* Our main() function. */
int
main(int argc, char *argv[])
{
  int run_num = 0;

  mcreadparams();
  mcinit();
  while(run_num < ncount)
  {
    mcsetstate(0, 0, 0, 0, 0, 1, 0, 0, 0, 1);
    mcraytrace();
    run_num++;
  }
  mcfinally();
  return 0;
}

%}

INITIALIZE
%{
  MC_correction = 1;  /* Scale factor is initially unity */
  coll1_div = C1*MIN2RAD;
  coll2_div = C2*MIN2RAD;
  coll2_div = C3*MIN2RAD;
  ncount = NCOUNT;
  {
    double d = 0.0125;		/* 12.5 mm between slab centers. */
    double phi = 0.0095;	/* Rotation between adjacent slabs. */
    mpos0 = -3.5*d; mrot0 = -3.5*phi;
    mpos1 = -2.5*d; mrot1 = -2.5*phi;
    mpos2 = -1.5*d; mrot2 = -1.5*phi;
    mpos3 = -0.5*d; mrot3 = -0.5*phi;
    mpos4 =  0.5*d; mrot4 =  0.5*phi;
    mpos5 =  1.5*d; mrot5 =  1.5*phi;
    mpos6 =  2.5*d; mrot6 =  2.5*phi;
    mpos7 =  3.5*d; mrot7 =  3.5*phi;
  }
  OMM_r = OMM_d*DEG2RAD;
  TTM_r = TTM_d*DEG2RAD;
  TT_r  =  TT_d*DEG2RAD;
%}

COMPONENT a1 = Axis()
  AT (0,0,0) ABSOLUTE

COMPONENT source = Source_aim(
	radius = 0.060,
	dist = 3.288,
	xw = 0.042, yh = 0.082, 
	v0 = 977.9,	/* Which is 5.0 meV */
	dv = 20)		/* dE = 0.2 meV */
  AT (0,0,0) RELATIVE a1 ROTATED (0,0,0) RELATIVE a1

COMPONENT slit1 = Slit(
	xmin=-0.020, xmax=0.065,
	ymin = -0.075, ymax = 0.075)
  AT (0, 0, 1.1215) RELATIVE a1 ROTATED (0,0,0) RELATIVE a1

COMPONENT slit2 = Slit(
	xmin = -0.020, xmax = 0.020,
	ymin = -0.040, ymax = 0.040)
  AT (0,0,1.900) RELATIVE a1 ROTATED (0,0,0) RELATIVE a1

COMPONENT slit3 = Slit(
	xmin = -0.021, xmax = 0.021,
	ymin = -0.041, ymax = 0.041)
  AT (0,0,3.288) RELATIVE a1 ROTATED (0,0,0) RELATIVE a1

COMPONENT focus_mono = Axis()
  AT (0, 0, 3.56) RELATIVE a1 ROTATED (0, EXTERN OMM_r, 0) RELATIVE a1

COMPONENT m0 = Monochromator(
	zmin=-0.0375,zmax=0.0375,ymin=-0.006,ymax=0.006,
	mosaich=EXTERN tas1_mono_mosaic,mosaicv=EXTERN tas1_mono_mosaic,
	r0=EXTERN tas1_mono_r0, Q=EXTERN tas1_mono_q)
  AT (0, EXTERN mpos0, 0) RELATIVE focus_mono
  ROTATED (0, 0, EXTERN mrot0) RELATIVE focus_mono

COMPONENT m1 = Monochromator(
	zmin=-0.0375,zmax=0.0375,ymin=-0.006,ymax=0.006,
	mosaich=EXTERN tas1_mono_mosaic,mosaicv=EXTERN tas1_mono_mosaic,
	r0=EXTERN tas1_mono_r0, Q=EXTERN tas1_mono_q)
  AT (0, EXTERN mpos1, 0) RELATIVE focus_mono
  ROTATED (0, 0, EXTERN mrot1) RELATIVE focus_mono

COMPONENT m2 = Monochromator(
	zmin=-0.0375,zmax=0.0375,ymin=-0.006,ymax=0.006,
	mosaich=EXTERN tas1_mono_mosaic,mosaicv=EXTERN tas1_mono_mosaic,
	r0=EXTERN tas1_mono_r0, Q=EXTERN tas1_mono_q)
  AT (0, EXTERN mpos2, 0) RELATIVE focus_mono
  ROTATED (0, 0, EXTERN mrot2) RELATIVE focus_mono

COMPONENT m3 = Monochromator(
	zmin=-0.0375,zmax=0.0375,ymin=-0.006,ymax=0.006,
	mosaich=EXTERN tas1_mono_mosaic,mosaicv=EXTERN tas1_mono_mosaic,
	r0=EXTERN tas1_mono_r0, Q=EXTERN tas1_mono_q)
  AT (0, EXTERN mpos3, 0) RELATIVE focus_mono
  ROTATED (0, 0, EXTERN mrot3) RELATIVE focus_mono

COMPONENT m4 = Monochromator(
	zmin=-0.0375,zmax=0.0375,ymin=-0.006,ymax=0.006,
	mosaich=EXTERN tas1_mono_mosaic,mosaicv=EXTERN tas1_mono_mosaic,
	r0=EXTERN tas1_mono_r0, Q=EXTERN tas1_mono_q)
  AT (0, EXTERN mpos4, 0) RELATIVE focus_mono
  ROTATED (0, 0, EXTERN mrot4) RELATIVE focus_mono

COMPONENT m5 = Monochromator(
	zmin=-0.0375,zmax=0.0375,ymin=-0.006,ymax=0.006,
	mosaich=EXTERN tas1_mono_mosaic,mosaicv=EXTERN tas1_mono_mosaic,
	r0=EXTERN tas1_mono_r0, Q=EXTERN tas1_mono_q)
  AT (0, EXTERN mpos5, 0) RELATIVE focus_mono
  ROTATED (0, 0, EXTERN mrot5) RELATIVE focus_mono

COMPONENT m6 = Monochromator(
	zmin=-0.0375,zmax=0.0375,ymin=-0.006,ymax=0.006,
	mosaich=EXTERN tas1_mono_mosaic,mosaicv=EXTERN tas1_mono_mosaic,
	r0=EXTERN tas1_mono_r0, Q=EXTERN tas1_mono_q)
  AT (0, EXTERN mpos6, 0) RELATIVE focus_mono
  ROTATED (0, 0, EXTERN mrot6) RELATIVE focus_mono

COMPONENT m7 = Monochromator(
	zmin=-0.0375,zmax=0.0375,ymin=-0.006,ymax=0.006,
	mosaich=EXTERN tas1_mono_mosaic,mosaicv=EXTERN tas1_mono_mosaic,
	r0=EXTERN tas1_mono_r0, Q=EXTERN tas1_mono_q)
  AT (0, EXTERN mpos7, 0) RELATIVE focus_mono
  ROTATED (0, 0, EXTERN mrot7) RELATIVE focus_mono

COMPONENT a2 = Axis()
  AT (0,0,0) RELATIVE focus_mono ROTATED (0, EXTERN TTM_r, 0) RELATIVE a1

COMPONENT slitMS1 = Slit(
	xmin = -0.0105, xmax = 0.0105, ymin = -0.035, ymax = 0.035)
  AT (0,0,0.565) RELATIVE a2 ROTATED (0,0,0) RELATIVE a2

COMPONENT slitMS2 = Slit(
	xmin = -0.0105, xmax = 0.0105, ymin = -0.035, ymax = 0.035)
  AT (0,0,0.855) RELATIVE a2 ROTATED (0,0,0) RELATIVE a2

/* COMPONENT slitMS1 = Slit( */
/* 	xmin = -0.020, xmax = 0.020, ymin = -0.035, ymax = 0.035) */
/*   AT (0,0,0.565) RELATIVE a2 ROTATED (0,0,0) RELATIVE a2 */

/* COMPONENT slitMS2 = Slit( */
/* 	xmin = -0.020, xmax = 0.020, ymin = -0.035, ymax = 0.035) */
/*   AT (0,0,0.855) RELATIVE a2 ROTATED (0,0,0) RELATIVE a2 */

COMPONENT c1 = Collimator_len(
	xmin = -0.02, xmax = 0.02, ymin = -0.0375, ymax = 0.0375,
	len = 0.250, divergence = EXTERN coll1_div)
  AT (0, 0, 0.87) RELATIVE a2 ROTATED (0,0,0) RELATIVE a2

COMPONENT slitMS3 = Circular_slit(radius = 0.025)
  AT (0,0,1.130) RELATIVE a2 ROTATED (0,0,0) RELATIVE a2

COMPONENT slitMS4 = Circular_slit(radius = 0.025)
  AT (0,0,1.180) RELATIVE a2 ROTATED (0,0,0) RELATIVE a2

COMPONENT slitMS5 = Circular_slit(radius = 0.0275)
  AT (0,0,1.230) RELATIVE a2 ROTATED (0,0,0) RELATIVE a2

COMPONENT mon = Monitor(
	xmin = -0.025, xmax = 0.025, ymin = -0.0375, ymax = 0.0375,
	psum = EXTERN mon_psum, Nsum = EXTERN mon_Nsum)
  AT (0, 0, 1.280) RELATIVE a2 ROTATED (0,0,0) RELATIVE a2

COMPONENT slitMS6 = Slit(
	xmin = -0.006, xmax = 0.006, ymin = -0.016, ymax = 0.016)
  AT (0,0,1.370) RELATIVE a2 ROTATED (0,0,0) RELATIVE a2

COMPONENT vmon1 = v_monitor(
	xmin = -0.01, xmax = 0.01,
	ymin = -0.1, ymax = 0.1,
	vmin = 940, vmax = 1010, n = 70,
	V_N = vmon1_N, V_p = vmon1_p, filename = EXTERN vmon1_file_name)
  AT(0, 0, 1.5) RELATIVE a2 ROTATED (0,0,0) RELATIVE a2

COMPONENT sample = Powder1(
	radius = 0.007,
	h = 0.015,
	q = 1.8049,
	d_phi0 = 0.07,
	pack = 1, j = 6, DW = 1,
	F2 = 56.8,
	Vc = 85.0054, sigma_a = 0.463,
	target_x = 1000,  /* ToDo: GET_X(ana) */
	target_y = 0, target_z = 1000)
  AT (0, 0, 1.565) RELATIVE a2 ROTATED (0,0,0) RELATIVE a2

COMPONENT a3 = Axis()
  AT (0,0,0) RELATIVE sample ROTATED (0, EXTERN TT_r, 0) RELATIVE a2

COMPONENT slitSA1 = Slit(
	xmin = -0.008, xmax = 0.008, ymin = -0.020, ymax = 0.020)
  AT (0,0,0.320) RELATIVE a3 ROTATED (0,0,0) RELATIVE a3

COMPONENT c2 = Collimator_len(
	xmin = -0.02, xmax = 0.02, ymin = -0.0315, ymax = 0.0315,
	len = 0.300, divergence = EXTERN coll2_div)
  AT (0, 0, 0.370) RELATIVE a3 ROTATED (0,0,0) RELATIVE a3

COMPONENT ana = Axis()
  AT (0, 0, 0.770) RELATIVE a3 ROTATED (0, 0, 0) RELATIVE a3

COMPONENT a4 = Axis()
  AT (0, 0, 0) RELATIVE ana ROTATED (0, 0, 0) RELATIVE a3

COMPONENT c3 = Collimator_len(
	xmin = -0.02, xmax = 0.02, ymin = -0.05, ymax = 0.05,
	len = 0.270, divergence = EXTERN coll3_div)
  AT (0,0,0.104) RELATIVE a4 ROTATED (0,0,0) RELATIVE a4

COMPONENT sng = Monitor(
	xmin = -0.01, xmax = 0.01,
	ymin = -0.045, ymax = 0.045,
	Nsum = EXTERN sng_Nsum, psum = EXTERN sng_psum)
  AT(0, 0, 0.43) RELATIVE a4 ROTATED (0,0,0) RELATIVE a4

COMPONENT vmon2 = v_monitor(
	xmin = -0.0125, xmax = 0.0125,
	ymin = -0.05, ymax = 0.05,
	vmin = 940, vmax = 1010, n = 70,
	V_N = vmon2_N, V_p = vmon2_p, filename = EXTERN vmon2_file_name)
  AT(0, 0, 0.43) RELATIVE a4 ROTATED (0,0,0) RELATIVE a4

FINALLY
%{
/*   printf("Finished simulation of %d neutrons.\n", ncount); */
  printf("Correction factor: %g \n",MC_correction);
  printf("MON = %g (%d neutrons)\n", mon_psum, mon_Nsum);
  printf("I = %g (%d neutrons detected)\n", sng_psum/MC_correction, sng_Nsum);
%}

END
