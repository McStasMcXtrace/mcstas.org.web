#chmod 711 to the server

sub open_file_read  # connects the file for "read"
{
  $filename = $_[0];
  open (DATABASE, "<${root}$filename");# or print $!;
  if($flocking) {flock DATABASE, 2;}
}

sub open_file_write # connects the file for "write"
{
  $filename = $_[0];
  open (DATABASE, ">${root}$filename");# or print $!;
  if($flocking) {flock DATABASE, 2;}
}

sub close_file   # disconnects from a file
{
  if($flocking) {flock DATABASE, 8;}
  close DATABASE;
}

sub open_database_append  # connects the database for "append"
{
  open (DATABASE, ">>${root}$database");# or print $!;
  if($flocking) {flock DATABASE, 2;}
}

# read the statistics for the selection page
sub read_stats
{
  $StatsCounter = 0;
  &open_file_read($logfile);
  while ($data = <DATABASE>)
  {
    push(@stats, $data);
    $StatsCounter++;
  }
  &close_file;
  @stats = reverse(@stats);
  &get_date;
}

# read the log file and count how many times same IP has downloaded the same file on that day
sub read_logfile
{
  $ID = $_[0];
  &read_one($ID);
  &get_date;
  $loop = 0;
  $DateCounter = 0;
  &open_file_read($logfile);
  @rows = <DATABASE>;
  &close_file;

  # reverse order to get the recent dates first
  @rows = reverse(@rows);

  foreach $thisrow (@rows)
  {
    @filedata = split(/\s*\|\s*/,$thisrow , );
    $file_id = $filedata[4];
    $TheDate = $filedata[1];

    # then, see what user wants to see
    if ($file_id == $ID)
    {
      # first add max. of 10 recent days into an array
      if ($TheDate ne $today_date)
      {
        if (($TheDate ne $DateArray[$DateCounter-1]) && ($DateCounter < 10))
        {
          $DateArray[$DateCounter] =  $TheDate;
          $DateCounter++;
        }
      }

      if ($fields{'ShowWhat'} eq "Today") # show all records for today
      {
        if ($TheDate eq $today_date)
        {
          $stats[$loop] = $thisrow;
          $loop++;
        }
      }
      elsif ($fields{'ShowWhat'} eq "All")  # show all records for that ID
      {
        $stats[$loop] = $thisrow;
        $loop++;
      }
      else
      {
        $ListDate = $fields{'ShowWhat'};   # show all records for that day
        if ($TheDate eq $ListDate)
        {
          $stats[$loop] = $thisrow;
          $loop++;
        }
      }
    }
  }
}

# read all the information from the database
sub read_all
{
  &open_file_read($database);
  @data = <DATABASE>;
  &close_file;
}

# get the info for $ID
sub read_one
{
  $ID = $_[0];
  $idFound = 0;
  &open_file_read($database);
  @rows = <DATABASE>;
  &close_file;
  foreach $thisrow(@rows)
  {
    if ($thisrow =~ m/^$ID\|(.*)/)
    {
      @filedata = split(/\s*\|\s*/,$thisrow , );
      $file_id = $filedata[0];
      $file_name = &CleanString($filedata[1]);
      $name = &CleanString($filedata[2]);
      $max_downloads = &CleanString($filedata[3]);
      $counter = &CleanString($filedata[4]);
      $message1 = &CleanString($filedata[5]);
      $message2 = &CleanString($filedata[6]);
      $TemplateFile = &CleanString($filedata[7]);
      if ($TemplateFile eq "") {$TemplateFile = $TemplateFiles[0];}
      $idFound = 1;
    }
  }
}

# write back the modified record
sub save_one
{
  $ID = $_[0];
  &open_file_read($database);
  @rows = <DATABASE>;
  &close_file;

 # write back to database and modify counter
  &open_file_write($database);
  foreach $thisrow(@rows)
  {
   if (!($thisrow =~ m/^$ID\|.*/))
   {
     print DATABASE $thisrow;
   }
   else
   {
     $file_id = $ID;
     $thisrow = &Create_Record($file_id);
     print DATABASE $thisrow;
   }
  }
  &close_file;
}

# delete a record
sub delete_one
{
  $ID = $_[0];
  &open_file_read($database);
  @rows = <DATABASE>;
  &close_file;

 # write back to database and modify counter
  &open_file_write($database);
  foreach $thisrow(@rows)
  {
   if (!($thisrow =~ m/^$ID\|.*/))
   {
     print DATABASE $thisrow;
   }
  }
  &close_file;
}


# delete the stats for this ID
sub delete_one_stats
{
  $ID = $_[0];
  &open_file_read($logfile);
  @rows = <DATABASE>;
  &close_file;

 # write back to database
  &open_file_write($logfile);
  foreach $thisrow(@rows)
  {
    @filedata = split(/\s*\|\s*/,$thisrow , );
    $ThisIP = $filedata[4];
    if (!($ThisIP == $ID))
    {
      print DATABASE $thisrow;
    }
  }
  &close_file;
}

# delete the stats file
sub delete_all_stats
{
  &open_file_write($logfile);
  $thisrow = "";
  print DATABASE $thisrow;
  &close_file;
}

# check if ID is already used
sub IsIDUsed
{
  $ID = $_[0];
  $idFound = 0;
  &open_file_read($database);
  while(($thisrow = <DATABASE>))
  {
  if ($thisrow =~ m/^$ID\|(.*)/)
   {
    $idFound = 1;
   }
 }
 &close_file;
 return "$idFound";
}

# adds a new record to the database
sub AddFileToDatabase
{                
  $file_id = $_[0];
  $thisrow = &Create_Record($file_id);

  &open_database_append;
  print DATABASE $thisrow;
  &close_file;
}

# get the next available ID for the new record
sub get_id($newnum)
 {
   $newnum=0;
   open(IDFILE,"<${root}$IDFile");
   while(<IDFILE>)
     {
      $newnum = $_ + 1;
     }
   close(CIDFILE);
   return "$newnum";
 }

 # saves the new ID
sub save_id
 {
   $ID = $_[0];
   open(IDFILE,">${root}$IDFile");
   print IDFILE "$ID";
   close (IDFILE);
 }
1;
