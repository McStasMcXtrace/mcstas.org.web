#chmod 711 to the server

# checks if user is logged in or not
sub checkIfLoggedIn
{
   $loggedIn = 0;
   if (($fields{'txtUsername'} eq $admin_username) && ($fields{'txtPassword'} eq $admin_password))
    {
      &SetCookies($CookieName,$fields{'txtUsername'});
      $username = $fields{'txtUsername'};
      $loggedIn = 1;
    }
   
   if ($loggedIn == 0)
   {
     &GetCookies($CookieName);
     $username = $Cookies{$CookieName};
     if ($username eq $admin_username)
     {
       $loggedIn = 1;
     }
   }
}

# checks the inputs
sub check_inputs
{
  if ($fields{'txtURL'} eq "")   {$error = $ErrorMessages{"URL"}; &print_error($error);}
  elsif ($fields{'txtName'} eq "")   {$error = $ErrorMessages{"Name"}; &print_error($error);}
  elsif ($fields{'txtMaxNumber'} eq "") {$error = $ErrorMessages{"maxDwnlds"}; &print_error($error);}
  $isNumber = $fields{'txtMaxNumber'};
  if (($isNumber <= 0) || ($isNumber >= $MaxDownload + 1)) {$error = $ErrorMessages{"maxDwnldsRange"}; &print_error($error);}
  $isNumber = $fields{'txtCounter'};
  if (($isNumber = 0) || ($fields{'txtCounter'} eq "")) {$fields{'txtCounter'} = 0;}
}

# clean the string (for saving)
sub FilterString
{
  ($string) = @_;
  chomp $string;
  $string =~ s/\n<br>/<br>/gm;
  $string =~ s/\n/<br>/gm;
  $string =~ s/\r<br>/<br>/gm;
  $string =~ s/\r/<br>/gm;
  $string =~ s/\|/<pipe>/gm;
  return "$string";
}

# clean the string (for displaying)
sub CleanString
{
  ($string) = @_;
  chomp $string;
  $string =~ s/\<br>/\n/g;
  $string =~ s/\<pipe>/|/g;
  return "$string";
}

sub Create_Record
{
  $file_id = $_[0];
  $file_name = &FilterString($fields{'txtURL'});
  $name = &FilterString($fields{'txtName'});
  $max_downloads = &FilterString($fields{'txtMaxNumber'});
  $counter = &FilterString($fields{'txtCounter'});
  $message1 = &FilterString($fields{'txtMessage1'});
  $message2 = &FilterString($fields{'txtMessage2'});
  $TemplateFile = &FilterString($fields{'cmbTemplate'});
  $thisrow = $file_id . "|" . $file_name . "|" . $name . "|" .  $max_downloads . "|" . $counter . "|" . $message1 . "|" . $message2 . "|" . $TemplateFile . "\n";
  return "$thisrow";
}


# get the variables from the browser
sub decode_vars
 {
  read(STDIN, $buffer, $ENV{'CONTENT_LENGTH'});
  if (length($buffer) < 5) 
  {
    $buffer = $ENV{QUERY_STRING};
  }

  @pairs = split(/&/, $buffer);
  foreach $pair (@pairs) 
  {
    ($name, $value) = split(/=/, $pair);

    $value =~ tr/+/ /;
    $value =~ s/%([a-fA-F0-9][a-fA-F0-9])/pack("C", hex($1))/eg;
    $fields{$name} = $value;
  }
}

# get today's date
sub get_date
{
  ($sek, $min, $std, $day, $mon, $year) = localtime(time);
  $year = $year + 1900;
  $mon = $mon + 1;

  if (length($mon) == 1) {$mon = "0" . $mon;}
  if (length($day) == 1) {$day = "0" . $day;}

  $today_date = "$mon-$day-$year";

  if (length($min) == 1) {$min = "0" . $min;}
  if (length($sek) == 1) {$sek = "0" . $sek;}

  $the_time =  "$std:$min:$sek";
}

# sorting options for statistics and selection
sub ByName
{
    @a = split(/\|/,$a);
    @b = split(/\|/,$b);
    lc($a[2]) cmp lc($b[2]);
}

sub ByDate
{
    @a = split(/\|/,$a);
    @b = split(/\|/,$b);
    lc($a[1]) lt lc($b[1]);
}

sub ByIP
{
    @a = split(/\|/,$a);
    @b = split(/\|/,$b);
    lc($a[0]) <=> lc($b[0]);
}


1;
